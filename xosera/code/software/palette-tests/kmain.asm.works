; *************************************************************
; Copyright (c) 2021 roscopeco <AT> gmail <DOT> com
; *************************************************************
;
    section .text                     ; This is normal code

    include "../xosera_equates.asm"

kmain::
    move.l  #XVID_BASE,A0             ; Load base address

    clr.w   D1

.PALETTE-LOOP    
    move.w  #$8000,D0
    or.w    D1,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0000,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$8001,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0111,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$8002,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0222,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$8003,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0333,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$8004,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0444,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$8005,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0555,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$8006,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0666,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$8007,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0777,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$8008,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0888,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$8009,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0999,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$800A,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0AAA,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$800B,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0BBB,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$800C,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0CCC,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$800D,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0DDD,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$800E,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0EEE,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #$800F,D0
    movep.w D0,(XVID_AUX_ADDR,A0)
    move.w  #$0FFF,D0
    movep.w D0,(XVID_AUX_DATA,A0)

    move.w  #0008,D0                  ; Address 2
    movep.w D0,(XVID_WR_ADDR,A0)
    move.w  #$1f48,D0                 ; Prints 'H'
    movep.w D0,(XVID_DATA,A0)
    move.b  #'e',(XVID_DATA+2,A0)     ; Prints 'e'
    move.b  #'l',(XVID_DATA+2,A0)     ; Prints 'l'
    move.b  #'l',(XVID_DATA+2,A0)     ; Prints 'l'
    move.b  #'o',(XVID_DATA+2,A0)     ; Prints 'o'

WAIT:
    bra.s   WAIT

    rts

